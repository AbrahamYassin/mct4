'use client'
import { useEffect, useState } from 'react'
import AppNavbar from '@/components/AppNavbar'
import { Section, TagEditor, ListEditor } from '@/components/EditorWidgets'
const COLORS=['#2563eb','#16a34a','#dc2626','#7c3aed','#ea580c','#0ea5e9','#111827']
export default function Editor({ params }){
  const [cv,setCv]=useState(null); useEffect(()=>{ fetch(`/api/cv/${params.id}`).then(r=>r.json()).then(setCv) },[params.id])
  const save=async()=>{ const r=await fetch(`/api/cv/${params.id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(cv)}); if(r.ok) setCv(await r.json()) }
  const handleFile=async(e)=>{ const f=e.target.files[0]; if(!f)return; const form=new FormData(); form.append('avatar',f); const r=await fetch(`/api/cv/${params.id}/avatar`,{method:'POST',body:form}); const j=await r.json(); if(!r.ok) alert(j.error||'Upload error'); else setCv(j) }
  if(!cv) return <div>Chargement...</div>
  return (<div><AppNavbar/><div className="container grid lg:grid-cols-2 gap-6 py-6"><div className="card p-4 space-y-4"><div className="flex items-center justify-between"><h2 className="font-bold text-lg">Informations personnelles</h2><div className="flex items-center gap-2"><select className="border p-2 rounded-xl" value={cv.template} onChange={e=>setCv({...cv, template:e.target.value})}><option value="modern">Modern</option><option value="clean">Clean</option><option value="basic">Basic</option></select><div className="flex items-center gap-1">{COLORS.map(c=>(<button key={c} onClick={()=>setCv({...cv, themeColor:c})} className="w-6 h-6 rounded-full border" style={{background:c}}></button>))}</div><button onClick={save} className="btn btn-outline">ðŸ’¾ Sauvegarder</button></div></div><div className="grid md:grid-cols-2 gap-3"><input className="border p-2 rounded-xl" placeholder="Nom complet" value={cv.personal?.fullName||''} onChange={e=>setCv({...cv, personal:{...cv.personal, fullName:e.target.value}})} /><input className="border p-2 rounded-xl" placeholder="Titre" value={cv.personal?.title||''} onChange={e=>setCv({...cv, personal:{...cv.personal, title:e.target.value}})} /><input className="border p-2 rounded-xl" placeholder="Email" value={cv.personal?.email||''} onChange={e=>setCv({...cv, personal:{...cv.personal, email:e.target.value}})} /><input className="border p-2 rounded-xl" placeholder="TÃ©lÃ©phone" value={cv.personal?.phone||''} onChange={e=>setCv({...cv, personal:{...cv.personal, phone:e.target.value}})} /><input className="border p-2 rounded-xl" placeholder="Localisation" value={cv.personal?.location||''} onChange={e=>setCv({...cv, personal:{...cv.personal, location:e.target.value}})} /><textarea className="border p-2 rounded-xl md:col-span-2" placeholder="RÃ©sumÃ©" value={cv.personal?.summary||''} onChange={e=>setCv({...cv, personal:{...cv.personal, summary:e.target.value}})} /></div><div className="flex items-center gap-3"><input type="file" onChange={handleFile} />{cv.personal?.avatarUrl && <img src={cv.personal.avatarUrl} className="w-12 h-12 rounded-full object-cover" />}</div><Section title="CompÃ©tences"><TagEditor items={cv.skills||[]} onChange={v=>setCv({...cv, skills:v})} placeholder="Ajouter une compÃ©tence" /></Section><Section title="Langues"><TagEditor items={cv.languages||[]} onChange={v=>setCv({...cv, languages:v})} placeholder="Ajouter une langue" /></Section><Section title="ExpÃ©riences"><ListEditor items={cv.experiences||[]} onChange={v=>setCv({...cv, experiences:v})} fields={[['title','IntitulÃ©'],['company','Organisation'],['startDate','DÃ©but'],['endDate','Fin'],['description','Description']]} /></Section><Section title="Formations"><ListEditor items={cv.education||[]} onChange={v=>setCv({...cv, education:v})} fields={[['degree','DiplÃ´me'],['school','Ã‰tablissement'],['startDate','DÃ©but'],['endDate','Fin'],['description','Description']]} /></Section><Section title="Projets"><ListEditor items={cv.projects||[]} onChange={v=>setCv({...cv, projects:v})} fields={[['name','Nom'],['link','Lien'],['description','Description']]} /></Section><div className="flex gap-2 pt-2"><button onClick={save} className="btn btn-outline">Sauvegarder</button><a className="btn btn-outline" href={`/preview/${cv.id||cv._id}`}>PrÃ©visualiser</a></div></div><div className="card p-2"><iframe src={`/api/cv/${cv.id||cv._id}/export`} className="w-full h-[80vh] border rounded-xl"></iframe></div></div></div>)
}
